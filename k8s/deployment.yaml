apiVersion: apps/v1
kind: Deployment
metadata:
  name: <deploy_name>
  namespace: <namespace>
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: <deploy_name>
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: <deploy_name>
    spec:
      containers:
        - env:
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: appSecret
                  key: MONGODB_URI
            - name: PORT
              valueFrom:
                secretKeyRef:
                  name: appSecret
                  key: PORT
            - name: RABBIT_MQ_URI
              valueFrom:
                secretKeyRef:
                  name: appSecret
                  key: RABBIT_MQ_URI
            - name: RABBIT_MQ_AUDIT_QUEUE
              valueFrom:
                secretKeyRef:
                  name: appSecret
                  key: RABBIT_MQ_AUDIT_QUEUE
          image: <image_url>:<image_tag>
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 3
            successThreshold: 1
            tcpSocket:
              port: 80
            timeoutSeconds: 1
          name: <deploy_name>
          ports:
            - containerPort: 80
              name: http-port
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 80
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 600m
              memory: 1Gi
            requests:
              cpu: 300m
              memory: 512Mi
          startupProbe:
            failureThreshold: 20
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 80
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/
              name: <deploy_name>-nginx-conf
              readOnly: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: repo-xaniis-local
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: <deploy_name>-nginx-conf
          name: <deploy_name>-nginx-conf
